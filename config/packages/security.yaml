security:
        # Nécessaire pour le bon foncitonnement de l'encodage à l'aide de UserPasswordEncoderInterface
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        userProvider:
            entity:
                class: App\Entity\User # Ajout de 4 fonctions dans l'Entity User pour le bon fonctionnement de l'encodage à l'aide de UserPasswordEncoderInterface
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            provider: userProvider
            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

            form_login:
                login_path: login # route définie pour la connexion
                check_path: login # page de redirection si connexion nok
                username_parameter: login[_email]
                password_parameter: login[_password]

            logout:
                path: logout # route définie dans routes.yaml
                target: homepage # page de redirection : page d'accueil

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: '^/admin', roles: ROLE_ADMIN }
        - { path: '^/membre/covoiturage/tous-les-covoiturages', roles: ROLE_ADMIN }
        - { path: '^/professeur', roles: ROLE_TEACHER }
        - { path: '^/membre', roles: ROLE_USER }

    role_hierarchy: # ROLE_ADMIN inclu ROLE_TEACHER qui inclu ROLE_USER
        ROLE_ADMIN: ROLE_TEACHER
        ROLE_TEACHER: ROLE_USER